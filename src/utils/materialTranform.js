export function materialTransform(apiData) {
  return {
    itemCode: apiData.Itemcode,
    materialCode: apiData.Materialcode,
    uom: apiData.UOM,
    noun: apiData.Noun,
    modifier: apiData.Modifier,
    hsnId: apiData.HSNID,
    legacy: apiData.Legacy,
    legacy2: apiData.Legacy2,
    shortDesc: apiData.Shortdesc,
    longDesc: apiData.Longdesc,
    additionalInfo: apiData.Additionalinfo,
    sourceUrl: apiData.Soureurl,
    junk: apiData.Junk,
    plant: apiData.Plant,
    manufacturerCode: apiData.Manufacturercode,
    manufacturer: apiData.Manufacturer,
    partNo: apiData.Partno,
    partNoDup: apiData.Partnodup,
    application: apiData.Application,
    drawingNo: apiData.Drawingno,
    referenceNo: apiData.Referenceno,
    itemStatus: apiData.ItemStatus,
    remarks: apiData.Remarks,
    revRemarks: apiData.RevRemarks,
    relRemarks: apiData.RelRemarks,
    characteristics: apiData.Characteristics.map((characteristic) => ({
      characteristic: characteristic.Characteristic,
      value: characteristic.Value,
      uom: characteristic.UOM,
      sequence: characteristic.Squence,
      shortSequence: characteristic.ShortSquence,
      source: characteristic.Source,
      sourceUrl: characteristic.SourceUrl,
      definition: characteristic.Definition,
    })),
    remark: apiData.Remark,
    // equipment: apiData.Equipment,
    equipment: {
      name: apiData.Equipment?.Name,
      tagNo: apiData.Equipment?.Tagno,
      manufacturer: apiData.Equipment?.Manufacturer,
      serialNo: apiData.Equipment?.Serialno,
      modelNo: apiData.Equipment?.Modelno,
      additionalInfo: apiData.Equipment?.Additionalinfo,
      sourceUrl: apiData.Equipment?.Soureurl,
      ens: apiData.Equipment?.ENS,
      ems: apiData.Equipment?.EMS,
    },
    requester: apiData.requester,
    approver: apiData.approver,
    catalogue: {
      userId: apiData.Catalogue.UserId,
      name: apiData.Catalogue.Name,
      updatedOn: apiData.Catalogue.UpdatedOn,
    },
    review: {
      userId: apiData.Review.UserId,
      name: apiData.Review.Name,
      updatedOn: apiData.Review.UpdatedOn,
    },
    finance: {
      userId: apiData.Finance.UserId,
      name: apiData.Finance.Name,
      updatedOn: apiData.Finance.UpdatedOn,
    },
    release: {
      userId: apiData.Release.UserId,
      name: apiData.Release.Name,
      updatedOn: apiData.Release.UpdatedOn,
    },
    rejectedBy: apiData.RejectedBy,
    createdOn: apiData.CreatedOn,
    updatedOn: apiData.UpdatedOn,
    duplicates: apiData.Duplicates,
    vendorSuppliers: apiData.Vendorsuppliers.map((vendor) => ({
      slno: vendor.slno,
      code: vendor.Code,
      name: vendor.Name,
      type: vendor.Type,
      refNo: vendor.RefNo,
      refNoDup: vendor.RefNoDup,
      refFlag: vendor.Refflag,
      s: vendor.s,
      l: vendor.l,
      shortMfr: vendor.shortmfr,
    })),
    unspsc: apiData.Unspsc,
    attachment: apiData.Attachment,
    rework: apiData.Rework,
    reworkCat: apiData.Reworkcat,
    mainCode: apiData.Maincode,
    subCode: apiData.Subcode,
    subSubCode: apiData.Subsubcode,
    missingValue: apiData.MissingValue,
    enrichedValue: apiData.EnrichedValue,
    unmap: apiData.Unmap,
    batch: apiData.batch,
    type: apiData.Type,
    systemBalance: apiData.System_Balance,
    quantityAsOnDate: apiData.Quantity_as_on_Date,
    stockQuantity: apiData.Stock_Quantity,
    noOfItemAgainstPVObs: apiData.No_of_Item_Aginst_PV_Obs,
    physicalObservation: apiData.Physical_Observation,
    expiredDate: apiData.Expired_Date,
    storageBin1: apiData.Storage_Bin1,
    storageLocation1: apiData.Storage_Location1,
    grDate: apiData.GR_Date,
    noOfItemsExpired: apiData.No_of_Items_Expired,
    binUpdationMissPlaced: apiData.Bin_Updation_Miss_Placed,
    shelfLife: apiData.Shelf_Life,
    pvStatus: apiData.PVstatus,
    pvUser: apiData.PVuser,
    specification: apiData.Specification,
    appImage1: apiData.Appimage1,
    appImage2: apiData.Appimage2,
    equipments: apiData.Equipments,
    category: apiData.category,
    plantExt: apiData.Plant_Ext,
    clfDate: apiData.CLF_Date,
    clarifiedDate: apiData.Clarified_Date,
    clarifiedDate_: apiData.Clarified_Date_,
    clarifiedDate1: apiData.Clarified_Date1,
    clarifiedDate1_: apiData.Clarified_Date1_,
    clarifiedDate2: apiData.Clarified_Date2,
    clarifiedDate2_: apiData.Clarified_Date2_,
  };
}
